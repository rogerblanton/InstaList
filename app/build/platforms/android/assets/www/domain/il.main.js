System.register("il.main", [], function($__export) {
  "use strict";
  var __moduleName = "il.main";
  var IL;
  return {
    setters: [],
    execute: function() {
      IL = $__export("IL", (function() {
        var IL = function IL(state) {
          this.state = state && this.isState(state) ? state : this.updateState();
        };
        return ($traceurRuntime.createClass)(IL, {
          isState: function(state) {},
          updateState: function() {
            return {};
          },
          patch: function() {
            var component = arguments[0] !== (void 0) ? arguments[0] : "main";
            var keys = Object.keys(component.observe),
                model = component.model_,
                key,
                x;
            for (x = 0; x < keys.length; x++) {
              key = keys[x];
              if (!this.state[model]) {
                this.state[model] = {};
              }
              component[key] = this.state[model][key];
              this.state[model].watch(key, function(id, oldVal, newVal) {
                if (component[id] != newVal) {
                  component[id] = newVal;
                }
                return newVal;
              });
            }
          }
        }, {});
      }()));
    }
  };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci8zIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzIiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMSIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci8wIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzQiLCJlZC5tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssU0FBUyxBQUFDLGVBQXVDLFVBQVMsU0FBUTs7QUNBdkUsQUFBSSxJQUFBLENBQUEsWUFBVyxZQUFvQixDQUFDOztBQ0FwQyxPQUFPO0FBQ0QsVUFBTSxJQUFtQjtBQUN6QixVQUFNO1NDRlksQ0FBQSxTQUFRLEFBQUMsUUNBakMsU0FBUSxBQUFDO0FBQ0MsQUFBSSxVQUFBLEtDRFAsU0FBTSxHQUFDLENBQ0EsS0FBSSxDQUFHO0FBQ2pCLGFBQUcsTUFBTSxFQUFJLENBQUEsS0FBSSxHQUFLLENBQUEsSUFBRyxRQUFRLEFBQUMsQ0FBQyxLQUFJLENBQUMsQ0FBQSxDQUFHLE1BQUksRUFBSSxDQUFBLElBQUcsWUFBWSxBQUFDLEVBQUMsQ0FBQztRRER2QixBQ0VoRCxDREZpRDtBQUN6QyxhQUFPLENBQUEsQ0FBQyxlQUFjLFlBQVksQ0FBQyxBQUFDO0FDRTVDLGdCQUFNLENBQU4sVUFBUSxLQUFJLENBQUUsR0FFZDtBQUNBLG9CQUFVLENBQVYsVUFBVyxBQUFDLENBQUU7QUFFWixpQkFBTyxHQUFDLENBQUM7VUFDWDtBQUNBLGNBQUksQ0FBSixVQUFNLEFBQWlCLENBQUc7Y0FBcEIsVUFBUSw2Q0FBSSxPQUFLO0FBQ3JCLEFBQUksY0FBQSxDQUFBLElBQUcsRUFBSSxDQUFBLE1BQUssS0FBSyxBQUFDLENBQUMsU0FBUSxRQUFRLENBQUM7QUFBRyxvQkFBSSxFQUFJLENBQUEsU0FBUSxPQUFPO0FBQUcsa0JBQUU7QUFBRyxnQkFBQSxDQUFDO0FBQzNFLGdCQUFJLENBQUEsRUFBRSxFQUFBLENBQUUsQ0FBQSxDQUFBLEVBQUUsQ0FBQSxJQUFHLE9BQU8sQ0FBRSxDQUFBLENBQUEsRUFBRSxDQUFFO0FBQ3hCLGdCQUFFLEVBQUksQ0FBQSxJQUFHLENBQUUsQ0FBQSxDQUFDLENBQUM7QUFDYixpQkFBRyxDQUFDLElBQUcsTUFBTSxDQUFFLEtBQUksQ0FBQyxDQUFFO0FBQUMsbUJBQUcsTUFBTSxDQUFFLEtBQUksQ0FBQyxFQUFJLEdBQUMsQ0FBQztjQUFDO0FBQUEsQUFDOUMsc0JBQVEsQ0FBRSxHQUFFLENBQUMsRUFBSSxDQUFBLElBQUcsTUFBTSxDQUFFLEtBQUksQ0FBQyxDQUFFLEdBQUUsQ0FBQyxDQUFDO0FBQ3ZDLGlCQUFHLE1BQU0sQ0FBRSxLQUFJLENBQUMsTUFBTSxBQUFDLENBQUMsR0FBRSxDQUFHLFVBQVUsRUFBQyxDQUFHLENBQUEsTUFBSyxDQUFHLENBQUEsTUFBSyxDQUFHO0FBQ3pELG1CQUFHLFNBQVEsQ0FBRSxFQUFDLENBQUMsR0FBSyxPQUFLLENBQUU7QUFDekIsMEJBQVEsQ0FBRSxFQUFDLENBQUMsRUFBSSxPQUFLLENBQUM7Z0JBQ3hCO0FBQUEsQUFDQSxxQkFBTyxPQUFLLENBQUM7Y0FDZixDQUFDLENBQUM7WUFDSjtBQUFBLFVBQ0Y7QUFBQSxhRHJCOEQsQ0FBQztNQUN6RCxBQUFDLEVBQUMsRURKNEQ7SURFdkM7RUFDM0IsQ0FBQTtBRkRJLENBQUMsQ0FBQztBS3dCViIsImZpbGUiOiJlZC5tYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiU3lzdGVtLnJlZ2lzdGVyKCRfX3BsYWNlaG9sZGVyX18wLCAkX19wbGFjZWhvbGRlcl9fMSwgZnVuY3Rpb24oJF9fZXhwb3J0KSB7XG4gICAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzJcbiAgICAgICAgfSk7IiwidmFyIF9fbW9kdWxlTmFtZSA9ICRfX3BsYWNlaG9sZGVyX18wOyIsInJldHVybiB7XG4gICAgICBzZXR0ZXJzOiAkX19wbGFjZWhvbGRlcl9fMCxcbiAgICAgIGV4ZWN1dGU6ICRfX3BsYWNlaG9sZGVyX18xXG4gICAgfSIsInZhciAkX19wbGFjZWhvbGRlcl9fMCA9ICRfX2V4cG9ydCgkX19wbGFjZWhvbGRlcl9fMSwgJF9fcGxhY2Vob2xkZXJfXzIpOyIsImZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciAkX19wbGFjZWhvbGRlcl9fMCA9ICRfX3BsYWNlaG9sZGVyX18xO1xuICAgICAgICAgIHJldHVybiAoJHRyYWNldXJSdW50aW1lLmNyZWF0ZUNsYXNzKSgkX19wbGFjZWhvbGRlcl9fMiwgJF9fcGxhY2Vob2xkZXJfXzMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRfX3BsYWNlaG9sZGVyX180KTtcbiAgICAgICAgfSgpIiwiZXhwb3J0IGNsYXNzIEVEIHtcbiAgY29uc3RydWN0b3Ioc3RhdGUpIHtcbiAgICB0aGlzLnN0YXRlID0gc3RhdGUgJiYgdGhpcy5pc1N0YXRlKHN0YXRlKT8gc3RhdGUgOiB0aGlzLnVwZGF0ZVN0YXRlKCk7XG4gIH1cbiAgaXNTdGF0ZShzdGF0ZSl7XG4gICAgLy90YWtlIGNoZWNrIHRoaXMuc3RhdGUgZm9yIGludGVncml0eVxuICB9XG4gIHVwZGF0ZVN0YXRlKCkge1xuICAgIC8vR28gR2V0IG1haW4gTW9kZWwgYW5kIGJ1aWxkLlxuICAgIHJldHVybiB7fTtcbiAgfVxuICBwYXRjaChjb21wb25lbnQgPSBcIm1haW5cIikge1xuICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoY29tcG9uZW50Lm9ic2VydmUpLCBtb2RlbCA9IGNvbXBvbmVudC5tb2RlbF8sIGtleSwgeDtcbiAgICBmb3IoeD0wO3g8a2V5cy5sZW5ndGg7eCsrKXtcbiAgICAgIGtleSA9IGtleXNbeF07XG4gICAgICBpZighdGhpcy5zdGF0ZVttb2RlbF0pe3RoaXMuc3RhdGVbbW9kZWxdID0ge307fVxuICAgICAgY29tcG9uZW50W2tleV0gPSB0aGlzLnN0YXRlW21vZGVsXVtrZXldO1xuICAgICAgdGhpcy5zdGF0ZVttb2RlbF0ud2F0Y2goa2V5LCBmdW5jdGlvbiAoaWQsIG9sZFZhbCwgbmV3VmFsKSB7XG4gICAgICAgIGlmKGNvbXBvbmVudFtpZF0gIT0gbmV3VmFsKXtcbiAgICAgICAgICBjb21wb25lbnRbaWRdID0gbmV3VmFsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXdWYWw7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
